[{"D:\\react_qrcode_generation_scanner\\src\\index.js":"1","D:\\react_qrcode_generation_scanner\\src\\App.js":"2","D:\\react_qrcode_generation_scanner\\src\\reportWebVitals.js":"3","D:\\react_qrcode_generation_scanner\\src\\qrcode\\qrcode.js":"4","D:\\react_qrcode_generation_scanner\\src\\dashboard\\dashboard.js":"5","D:\\scan-qrcode\\src\\index.js":"6","D:\\scan-qrcode\\src\\reportWebVitals.js":"7","D:\\scan-qrcode\\src\\App.js":"8","D:\\scan-qrcode\\src\\qrcode\\qrcode.js":"9","D:\\scan-qrcode\\src\\dashboard\\dashboard.js":"10"},{"size":517,"mtime":1656177967082,"results":"11","hashOfConfig":"12"},{"size":1717,"mtime":1656343928801,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1656177967100,"results":"14","hashOfConfig":"12"},{"size":5727,"mtime":1656390996515,"results":"15","hashOfConfig":"12"},{"size":8943,"mtime":1656391410032,"results":"16","hashOfConfig":"12"},{"size":517,"mtime":1656177967082,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1656177967100,"results":"19","hashOfConfig":"18"},{"size":1717,"mtime":1656343928801,"results":"20","hashOfConfig":"18"},{"size":5727,"mtime":1656390996515,"results":"21","hashOfConfig":"18"},{"size":8952,"mtime":1656399110408,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"116zciw",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1bxgs3y",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"D:\\react_qrcode_generation_scanner\\src\\index.js",[],["46","47"],"D:\\react_qrcode_generation_scanner\\src\\App.js",[],"D:\\react_qrcode_generation_scanner\\src\\reportWebVitals.js",[],"D:\\react_qrcode_generation_scanner\\src\\qrcode\\qrcode.js",[],"D:\\react_qrcode_generation_scanner\\src\\dashboard\\dashboard.js",["48","49","50","51","52","53","54","55"],"D:\\scan-qrcode\\src\\index.js",[],["56","57"],"D:\\scan-qrcode\\src\\reportWebVitals.js",[],"D:\\scan-qrcode\\src\\App.js",[],"D:\\scan-qrcode\\src\\qrcode\\qrcode.js",[],"D:\\scan-qrcode\\src\\dashboard\\dashboard.js",["58","59","60","61","62","63","64","65"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport \"../dashboard/dashboard.css\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nfunction Dashboard(props) {\r\n  // Popup Modal\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //   Booths\r\n  const booths = [\r\n    { title: \"booth1\", description: \"booth1\", btn: 1 },\r\n    { title: \"booth2\", description: \"booth2\", btn: 2 },\r\n    { title: \"booth3\", description: \"booth3\", btn: 3 },\r\n  ];\r\n  const navigate = useNavigate();\r\n  //   console.log(booths);\r\n\r\n  //   const numberHandler = (id) => {\r\n  //     // e.preventDefault();\r\n  //     props.setNumbers(id);\r\n  //     navigate(\"/Qrcode\");\r\n  //     console.log(\"number:\", props.numbers);\r\n  //   };\r\n\r\n  const numberHandler1 = (e) => {\r\n    e.preventDefault();\r\n    props.setNumbers(1);\r\n    navigate(\"/Qrcode\");\r\n    console.log(\"number:\", props.numbers);\r\n  };\r\n\r\n  const numberHandler2 = (e) => {\r\n    e.preventDefault();\r\n    props.setNumbers(2);\r\n    navigate(\"/Qrcode\");\r\n    console.log(\"number:\", props.numbers);\r\n  };\r\n\r\n  const numberHandler3 = (e) => {\r\n    e.preventDefault();\r\n    props.setNumbers(3);\r\n    navigate(\"/Qrcode\");\r\n    console.log(\"number:\", props.numbers);\r\n  };\r\n\r\n  const RewardHandler = () => {\r\n    if (\r\n      props.scanResultWebCam === \"booth 1\" &&\r\n      props.scanResultWebCam2 === \"booth 1\" &&\r\n      props.scanResultWebCam3 === \"booth 1\"\r\n    ) {\r\n      return handleShow();\r\n    } else if (\r\n      props.scanResultWebCam === \"\" &&\r\n      props.scanResultWebCam2 === \"booth 1\" &&\r\n      props.scanResultWebCam3 === \"booth 1\"\r\n    ) {\r\n      return handleShow();\r\n    } else if (\r\n      props.scanResultWebCam === \"booth 1\" &&\r\n      props.scanResultWebCam2 === \"\" &&\r\n      props.scanResultWebCam3 === \"booth 1\"\r\n    ) {\r\n      return handleShow();\r\n    } else if (\r\n      props.scanResultWebCam === \"booth 1\" &&\r\n      props.scanResultWebCam2 === \"booth 1\" &&\r\n      props.scanResultWebCam3 === \"\"\r\n    ) {\r\n      return handleShow();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    RewardHandler();\r\n    console.log(\"test\");\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Scan the QR and win rewards!</h1>\r\n        <p>\r\n          Step: Scan all the QR code provided by the booth to claim amazing\r\n          rewards from BookDoc!\r\n        </p>\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <div className=\"colI\">\r\n          <details>\r\n            <summary\r\n              style={{\r\n                textDecoration:\r\n                  props.scanResultWebCam != \"\" && props.scanResultWebCam != null\r\n                    ? \"line-through\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Booth 1\r\n              <div className=\"chevron\">\r\n                <span className=\"chev\"></span>\r\n              </div>\r\n            </summary>\r\n          </details>\r\n          <div className=\"animate\">\r\n            <p className=\"content\">\r\n              Introduced with HTML 5, the &lt;details&gt; element made it\r\n              possible to create javascript-free accordions. However, they came\r\n              with a downside, smooth opening and closing animations were not\r\n              possible. Many would just use JS to allow animations, but that\r\n              just defeats the purpose.\r\n              <br />\r\n              <br />\r\n              Thankfully, there <em>is</em> a CSS-only trick to improve the\r\n              element.\r\n            </p>\r\n            {props.scanResultWebCam != \"\" && props.scanResultWebCam != null ? (\r\n              <h5 className=\"visit\">Visited</h5>\r\n            ) : (\r\n              <Button\r\n                className=\"custom-btn\"\r\n                // style={{ marginLeft: \"25px\" }}\r\n                onClick={numberHandler1}\r\n              >\r\n                yes\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"colI\">\r\n          <details>\r\n            <summary\r\n              style={{\r\n                textDecoration:\r\n                  props.scanResultWebCam2 != \"\" &&\r\n                  props.scanResultWebCam2 != null\r\n                    ? \"line-through\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Booth 2\r\n              <div className=\"chevron\">\r\n                <span className=\"chev\"></span>\r\n              </div>\r\n            </summary>\r\n          </details>\r\n          <div className=\"animate\">\r\n            <p className=\"content\">\r\n              Introduced with HTML 5, the &lt;details&gt; element made it\r\n              possible to create javascript-free accordions. However, they came\r\n              with a downside, smooth opening and closing animations were not\r\n              possible. Many would just use JS to allow animations, but that\r\n              just defeats the purpose.\r\n              <br />\r\n              <br />\r\n              Thankfully, there <em>is</em> a CSS-only trick to improve the\r\n              element.\r\n            </p>\r\n            {props.scanResultWebCam2 != \"\" &&\r\n            props.scanResultWebCam2 != null ? (\r\n              <h5 className=\"visit\">Visited</h5>\r\n            ) : (\r\n              <Button className=\"custom-btn\" onClick={numberHandler2}>\r\n                yes\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"colI\">\r\n          <details>\r\n            <summary\r\n              style={{\r\n                textDecoration:\r\n                  props.scanResultWebCam3 != \"\" &&\r\n                  props.scanResultWebCam3 != null\r\n                    ? \"line-through\"\r\n                    : \"none\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Booth 3\r\n              <div className=\"chevron\">\r\n                <span className=\"chev\"></span>\r\n              </div>\r\n            </summary>\r\n          </details>\r\n          <div className=\"animate\">\r\n            <p className=\"content\">\r\n              Introduced with HTML 5, the &lt;details&gt; element made it\r\n              possible to create javascript-free accordions. However, they came\r\n              with a downside, smooth opening and closing animations were not\r\n              possible. Many would just use JS to allow animations, but that\r\n              just defeats the purpose.222222222\r\n              <br />\r\n              <br />\r\n              Thankfully, there <em>is</em> a CSS-only trick to improve the\r\n              element.\r\n            </p>\r\n            {props.scanResultWebCam3 != \"\" &&\r\n            props.scanResultWebCam3 != null ? (\r\n              <h5 className=\"visit\">Visited</h5>\r\n            ) : (\r\n              <Button className=\"custom-btn\" onClick={numberHandler3}>\r\n                yes\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>{\" \"}\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Tahniah</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Congratulation</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button>\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n              to=\"/\"\r\n              onClick={handleClose}\r\n            >\r\n              Claim Reward\r\n            </Link>\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {/* {booths.map((item, i) => (\r\n        <div className=\"wrapper\" key={i}>\r\n          <div className=\"colI\">\r\n            <details>\r\n              <summary\r\n                style={{\r\n                  textDecoration:\r\n                    props.scanResultWebCam !== \"\" &&\r\n                    props.scanResultWebCam !== null\r\n                      ? \"line-through\"\r\n                      : \"none\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {item.title}\r\n                <div className=\"chevron\">\r\n                  <span className=\"chev\"></span>\r\n                </div>\r\n              </summary>\r\n            </details>\r\n            <div className=\"animate\">\r\n              <p className=\"content\">\r\n                {item.description}\r\n                <br />\r\n                <br />\r\n              </p>\r\n              {props.scanResultWebCam !== \"\" &&\r\n              props.scanResultWebCam !== null ? (\r\n                <h5>Visited</h5>\r\n              ) : (\r\n                <Button\r\n                  style={{ textDecoration: \"none\" }}\r\n                  onClick={() => {\r\n                    numberHandler(item.btn);\r\n                  }}\r\n                >\r\n                  {item.btn}\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":14,"column":9,"nodeType":"72","messageId":"73","endLine":14,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":81,"column":6,"nodeType":"76","endLine":81,"endColumn":8,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":98,"column":42,"nodeType":"80","messageId":"81","endLine":98,"endColumn":44},{"ruleId":"78","severity":1,"message":"79","line":122,"column":37,"nodeType":"80","messageId":"81","endLine":122,"endColumn":39},{"ruleId":"78","severity":1,"message":"79","line":141,"column":43,"nodeType":"80","messageId":"81","endLine":141,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":166,"column":38,"nodeType":"80","messageId":"81","endLine":166,"endColumn":40},{"ruleId":"78","severity":1,"message":"79","line":181,"column":43,"nodeType":"80","messageId":"81","endLine":181,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":206,"column":38,"nodeType":"80","messageId":"81","endLine":206,"endColumn":40},{"ruleId":"66","replacedBy":"82"},{"ruleId":"68","replacedBy":"83"},{"ruleId":"70","severity":1,"message":"71","line":14,"column":9,"nodeType":"72","messageId":"73","endLine":14,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":81,"column":6,"nodeType":"76","endLine":81,"endColumn":8,"suggestions":"84"},{"ruleId":"78","severity":1,"message":"79","line":98,"column":42,"nodeType":"80","messageId":"81","endLine":98,"endColumn":44},{"ruleId":"78","severity":1,"message":"79","line":122,"column":37,"nodeType":"80","messageId":"81","endLine":122,"endColumn":39},{"ruleId":"78","severity":1,"message":"79","line":141,"column":43,"nodeType":"80","messageId":"81","endLine":141,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":166,"column":38,"nodeType":"80","messageId":"81","endLine":166,"endColumn":40},{"ruleId":"78","severity":1,"message":"79","line":181,"column":43,"nodeType":"80","messageId":"81","endLine":181,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":206,"column":38,"nodeType":"80","messageId":"81","endLine":206,"endColumn":40},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'booths' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'RewardHandler'. Either include it or remove the dependency array.","ArrayExpression",["87"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["85"],["86"],["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"89","fix":"91"},"Update the dependencies array to be: [RewardHandler]",{"range":"92","text":"93"},{"range":"94","text":"93"},[2219,2221],"[RewardHandler]",[2219,2221]]